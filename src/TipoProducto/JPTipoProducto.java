/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TipoProducto;

import Modelos.ValidacionesCampos;
import Modelos.TextPrompt;
import javax.swing.JOptionPane;
import TipoProducto.CTipoProducto;
import TipoProducto.GBDTipoProducto;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author German Bartoli
 */
public class JPTipoProducto extends javax.swing.JPanel {

    private final GBDTipoProducto gestorBDTipoProducto;

    private DefaultListModel<CTipoProducto> listModel;

    private ArrayList<CTipoProducto> alListaTipoSProducto;
    private ListSelectionListener lslListaTiposProductos;

    boolean banderaAgregarEditar;

    /**
     * Creates new form JPTipoProducto
     */
    public JPTipoProducto() {
        initComponents();

        gestorBDTipoProducto = new GBDTipoProducto();

        CrearListSelectionListenerListaTiposProductos();

        CargarLista();

        ValidacionCampos();

        //No copy/paste
        jTFTipoProducto.setTransferHandler(null);

        TextPrompt placeHolderCantidad = new TextPrompt(
                "Tipo de Producto",
                jTFTipoProducto,
                TextPrompt.Show.ALWAYS
        );
    }

    public void CargarLista() {
        alListaTipoSProducto = gestorBDTipoProducto.CargarListaTiposProductos();

        jLTipoProducto.removeListSelectionListener(lslListaTiposProductos);

        //Crear un objeto DefaultListModel
        listModel = new DefaultListModel<CTipoProducto>();

        //Recorrer el contenido del ArrayList
        for (int i = 0; i < alListaTipoSProducto.size(); i++) {
            //Añadir cada elemento del ArrayList en el modelo de la lista
            listModel.add(i, alListaTipoSProducto.get(i));
        }
        //Asociar el modelo de lista al JList
        jLTipoProducto.setModel(listModel);

        jLTipoProducto.addListSelectionListener(lslListaTiposProductos);

        if (jLTipoProducto.getModel().getSize() > 0) {
            HabilitarDeshabilitarCampos(false);
            jLTipoProducto.setEnabled(true);

            HabilitarDeshabilitarBotones(true);
            jBGuardar.setEnabled(false);
            jBCancelar.setEnabled(false);

            jLTipoProducto.setSelectedIndex(0);
        } else {
            HabilitarDeshabilitarCampos(false);

            HabilitarDeshabilitarBotones(false);
            jBAgregar.setEnabled(true);

            LimpiarCampos();
        }
    }

    private void CrearListSelectionListenerListaTiposProductos() {
        lslListaTiposProductos = new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if (!arg0.getValueIsAdjusting()) {
                    if (jLTipoProducto.getModel().getSize() != 0) {
                        LimpiarCampos();
                        SeleccionarItemLista();
                    }
                }
            }
        };
    }

    protected void SeleccionarItemLista() {
        if (jLTipoProducto.getModel().getSize() > 0) {
            jTFTipoProducto.setText(jLTipoProducto.getSelectedValue().getTipoProducto());
        }
    }

    private void LimpiarCampos() {
        jTFTipoProducto.setText("");
    }

    private void HabilitarDeshabilitarCampos(boolean x) {
        jTFTipoProducto.setEnabled(x);
        jLTipoProducto.setEnabled(x);
    }

    private void HabilitarDeshabilitarBotones(boolean x) {
        jBAgregar.setEnabled(x);
        jBEditar.setEnabled(x);
        jBBorrar.setEnabled(x);
        jBGuardar.setEnabled(x);
        jBCancelar.setEnabled(x);
    }

    //Validar numeros y letras, agregar mensaje si no quiere agregarlo
    private boolean validar() {
        if (jTFTipoProducto.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    this,
                    "¡Tipo de Producto Incorrecto!",
                    "Advertencia - Nona Mafalda",
                    JOptionPane.WARNING_MESSAGE);
            jTFTipoProducto.requestFocus();
            return false;
        }
        return true;
    }

    private void ValidacionCampos() {
        ValidacionesCampos.MayusculasMinusculasNumerosEspaciosBorrar40(jTFTipoProducto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBBorrar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jBAgregar = new javax.swing.JButton();
        jTFTipoProducto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLTipoProducto = new javax.swing.JList<>();
        jBEditar = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(null);

        jBBorrar.setBackground(new java.awt.Color(0, 0, 0));
        jBBorrar.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jBBorrar.setForeground(new java.awt.Color(255, 255, 255));
        jBBorrar.setText("Borrar");
        jBBorrar.setToolTipText("Borra el Producto Seleccionado");
        jBBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBorrar.setNextFocusableComponent(jBGuardar);
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });
        add(jBBorrar);
        jBBorrar.setBounds(550, 610, 180, 58);

        jBCancelar.setBackground(new java.awt.Color(0, 0, 0));
        jBCancelar.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jBCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jBCancelar.setText("Cancelar");
        jBCancelar.setToolTipText("Cancelar Operación");
        jBCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCancelar.setNextFocusableComponent(jLTipoProducto);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        add(jBCancelar);
        jBCancelar.setBounds(930, 610, 180, 58);

        jBGuardar.setBackground(new java.awt.Color(0, 0, 0));
        jBGuardar.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jBGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jBGuardar.setText("Guardar");
        jBGuardar.setToolTipText("Guardar el Tipo de Producto");
        jBGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBGuardar.setNextFocusableComponent(jBCancelar);
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        add(jBGuardar);
        jBGuardar.setBounds(740, 610, 180, 58);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tipo Producto");
        add(jLabel2);
        jLabel2.setBounds(483, 19, 298, 56);

        jBAgregar.setBackground(new java.awt.Color(0, 0, 0));
        jBAgregar.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jBAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jBAgregar.setText("Agregar");
        jBAgregar.setToolTipText("Agregar un Tipo de Producto");
        jBAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAgregar.setNextFocusableComponent(jBEditar);
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });
        add(jBAgregar);
        jBAgregar.setBounds(170, 610, 180, 58);

        jTFTipoProducto.setBackground(new java.awt.Color(0, 0, 0));
        jTFTipoProducto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTFTipoProducto.setForeground(new java.awt.Color(255, 255, 255));
        jTFTipoProducto.setToolTipText("Tipo de Producto");
        jTFTipoProducto.setCaretColor(new java.awt.Color(255, 255, 255));
        jTFTipoProducto.setNextFocusableComponent(jBAgregar);
        jTFTipoProducto.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTFTipoProducto.setSelectionColor(new java.awt.Color(255, 255, 255));
        add(jTFTipoProducto);
        jTFTipoProducto.setBounds(403, 531, 474, 39);

        jLTipoProducto.setBackground(new java.awt.Color(0, 0, 0));
        jLTipoProducto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLTipoProducto.setForeground(new java.awt.Color(255, 255, 255));
        jLTipoProducto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLTipoProducto.setToolTipText("Listado Tipo de Producto");
        jLTipoProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLTipoProducto.setNextFocusableComponent(jTFTipoProducto);
        jLTipoProducto.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jLTipoProducto.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jLTipoProducto);

        add(jScrollPane1);
        jScrollPane1.setBounds(403, 81, 474, 430);

        jBEditar.setBackground(new java.awt.Color(0, 0, 0));
        jBEditar.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jBEditar.setForeground(new java.awt.Color(255, 255, 255));
        jBEditar.setText("Editar");
        jBEditar.setToolTipText("Editar el Tipo de Producto Seleccionado");
        jBEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEditar.setNextFocusableComponent(jBBorrar);
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });
        add(jBEditar);
        jBEditar.setBounds(360, 610, 180, 58);
    }// </editor-fold>//GEN-END:initComponents

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        // TODO add your handling code here:
        if (jLTipoProducto.getModel().getSize() > 0) {
            if (JOptionPane.showConfirmDialog(
                    this,
                    "Esta seguro?",
                    "Eliminando Tipo Producto - Nona Mafalda",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                // yes option
                int idTipoProducto = jLTipoProducto.getSelectedValue().getIdTipoProducto();
                boolean exito = false;

                exito = gestorBDTipoProducto.EliminarTipoProducto(idTipoProducto);

                if (exito) {
                    JOptionPane.showMessageDialog(
                            this,
                            "El Producto se eliminó correctamente.",
                            "Exito - Nona Mafalda",
                            JOptionPane.INFORMATION_MESSAGE);

                    CargarLista();

                } else {
                    JOptionPane.showConfirmDialog(
                            this,
                            "Intentelo Nuevamente.",
                            "Error al Eliminar el Tipo de Producto - Nona Mafalda",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:

        HabilitarDeshabilitarCampos(false);
        jLTipoProducto.setEnabled(true);

        HabilitarDeshabilitarBotones(true);
        jBGuardar.setEnabled(false);
        jBCancelar.setEnabled(false);

        if (jLTipoProducto.getModel().getSize() > 0) {
            jLTipoProducto.setSelectedIndex(jLTipoProducto.getSelectedIndex());
            SeleccionarItemLista();
        } else {
            jLTipoProducto.setEnabled(false);

            jBBorrar.setEnabled(false);
            jBEditar.setEnabled(false);

            LimpiarCampos();
        }
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        if (validar()) {

            int idTipoProducto;

            if (banderaAgregarEditar) {
                idTipoProducto = -1;

            } else {
                idTipoProducto = jLTipoProducto.getSelectedValue().getIdTipoProducto();
            }

            String nombre = jTFTipoProducto.getText();

            CTipoProducto tipoProducto = new CTipoProducto(idTipoProducto, nombre, true);

             if (banderaAgregarEditar) {
                if (gestorBDTipoProducto.ExisteNombreTipoProductoAgregar(tipoProducto)) {
                    JOptionPane.showMessageDialog(
                            this,
                            "¡Tipo de Producto Repetido!",
                            "Advertencia - Nona Mafalda",
                            JOptionPane.WARNING_MESSAGE);
                    jTFTipoProducto.requestFocus();
                    return;
                }
            } else {
                if (gestorBDTipoProducto.ExisteNombreTipoProductoEditar(tipoProducto)) {
                    JOptionPane.showMessageDialog(
                            this,
                            "¡Tipo de Producto Repetido!",
                            "Advertencia - Nona Mafalda",
                            JOptionPane.WARNING_MESSAGE);
                    jTFTipoProducto.requestFocus();
                    return;
                }
            }

            boolean exito = false;

            if (idTipoProducto == -1) {
                exito = gestorBDTipoProducto.AgregarTipoProducto(tipoProducto);
            } else {
                try {
                    exito = gestorBDTipoProducto.ModificarTipoProducto(tipoProducto);
                } catch (SQLException ex) {
                    Logger.getLogger(JPTipoProducto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            if (exito) {
                JOptionPane.showMessageDialog(
                        this,
                        "El Tipo de Producto se guardó Correctamente",
                        "Exito - Nona Mafalda",
                        JOptionPane.INFORMATION_MESSAGE);

                CargarLista();

                for (int i = 0; i < jLTipoProducto.getModel().getSize(); i++) {
                    if (jLTipoProducto.getModel().getElementAt(i).getTipoProducto().equals(nombre)) {
                        jLTipoProducto.setSelectedIndex(i);
                    }
                }
            }
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        // TODO add your handling code here:
        banderaAgregarEditar = true;
        LimpiarCampos();

        HabilitarDeshabilitarCampos(true);
        jLTipoProducto.setEnabled(false);

        HabilitarDeshabilitarBotones(false);
        jBGuardar.setEnabled(true);
        jBCancelar.setEnabled(true);

        jTFTipoProducto.requestFocus();
    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed
        // TODO add your handling code here:
        if (jLTipoProducto.getModel().getSize() > 0) {
            banderaAgregarEditar = false;

            HabilitarDeshabilitarCampos(true);
            jLTipoProducto.setEnabled(false);

            HabilitarDeshabilitarBotones(false);
            jBGuardar.setEnabled(true);
            jBCancelar.setEnabled(true);

            jTFTipoProducto.requestFocus();
        }
    }//GEN-LAST:event_jBEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JList<TipoProducto.CTipoProducto> jLTipoProducto;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFTipoProducto;
    // End of variables declaration//GEN-END:variables
}
